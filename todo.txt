
steps towards an updating layout tree, instead of building a new one each frame:

       - DONE: check the Rc's and add refcell's where needed (see minimal example)
       - DONE: stop referencing from layout into DOM, clone() the content in there
       - DONE: keep the layout tree alive for multiple frames
              - DONE: I think we should do the layout build (overwrite var) in navigate, and update it in other places
              - DONE: variable should not be mut, but on navigate we should refcell::replace (this also needs to be done for document)
       - DONE: consider getting rid of the clickmap, if I keep the layout tree, I should know where things are
       - DONE: we had some refcell on the locations or rects somewhere, so we still need that when the above points are done? I think not, since
               the whole tree is now mutable
       - DONE: just make positions default to (0, 0, 0, 0) instead of NotYetComputed, so I can get rid of another enum layer

       - TODO: change to relative positions in layout node, this will help with only recomputing what we need

===================================

goals for 0.2.0:
       - test on mac
       - test on windows (document SDL install)
       - get a proper system for parsing CSS values (are they always numbers?)
       - make selecting text work (start with a naive implementation storing all text coordinates)
       - make pasting an url in the url bar work
       - add something about scope to readme (it not being a chrome wrapper, but using SDL / reqwest)
       - show something when loading a new page, so the user knows we are not hanging

other things (later versions):
       - move to rust 2021
       - make parse tests nicer by comparing json
       - fix transparancy in png's (loading works, rendering in SDL does not)
       - integration tests by exporting json for the layout tree, so I can test all the way from HTML to layout
       - look into threads for UI, network etc. (https://doc.rust-lang.org/book/ch16-01-threads.html)
       - figure out how do build standalone binaries
